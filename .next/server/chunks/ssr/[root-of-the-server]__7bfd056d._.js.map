{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/tobythurston/backtest-anything/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  CategoryScale,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Tooltip, Legend);\n\nexport default function Home() {\n  const [strategy, setStrategy] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [response, setResponse] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n\n  const generateCode = async () => {\n    setLoading(true);\n    const res = await fetch(\"http://127.0.0.1:8000/generate\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ prompt: strategy }),\n    });\n    const data = await res.json();\n    setCode(data.result);\n    setLoading(false);\n  };\n\n  const runBacktest = async () => {\n    setLoading(true);\n    const res = await fetch(\"http://127.0.0.1:8000/backtest\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ code }),\n    });\n    const data = await res.json();\n    setResponse(data);\n    setLoading(false);\n  };\n\n  const labels = [\n    \"2013-04-29\", \"2013-04-30\", \"2013-05-01\", \"2013-05-02\", \"2013-05-03\",\n    \"2013-05-04\", \"2013-05-05\", \"2013-05-06\", \"2013-05-07\", \"2013-05-08\",\n    \"2013-05-09\", \"2013-05-10\", \"2013-05-11\", \"2013-05-12\", \"2013-05-13\",\n    \"2013-05-14\", \"2013-05-15\", \"2013-05-16\", \"2013-05-17\", \"2013-05-18\",\n    \"2013-05-19\", \"2013-05-20\", \"2013-05-21\", \"2013-05-22\", \"2013-05-23\",\n    \"2013-05-24\", \"2013-05-25\", \"2013-05-26\", \"2013-05-27\", \"2013-05-28\",\n    \"2013-05-29\", \"2013-05-30\", \"2013-05-31\", \"2013-06-01\", \"2013-06-02\",\n    \"2013-06-03\"\n  ];\n\n  const prices = [\n    144.54, 139, 116.99, 105.21, 97.75, 112.5, 115.91, 112.3,\n    111.5, 113.57, 112.67, 117.2, 115.24, 115, 117.98, 111.5,\n    114.22, 118.76, 123.01, 123.5, 121.99, 122, 122.88, 123.88,\n    126.7, 133.2, 131.98, 133.48, 129.74, 129, 132.3, 128.8,\n    129, 129.3, 122.29, 122.22\n  ];\n\n  const buyIndices = response?.buy_index instanceof Array ? response.buy_index : response?.buy_index != null ? [response.buy_index] : [];\n  const sellIndices = response?.sell_index instanceof Array ? response.sell_index : response?.sell_index != null ? [response.sell_index] : [];\n\n  const datasets: any[] = [\n    {\n      label: \"BTC Price\",\n      data: prices,\n      borderColor: \"rgba(75,192,192,1)\",\n      pointRadius: 2,\n      tension: 0.4,\n    },\n    ...buyIndices.map((index: number) => ({\n      label: \"Buy\",\n      data: prices.map((_, i) => (i === index ? prices[i] : null)),\n      backgroundColor: \"green\",\n      pointRadius: 6,\n      type: \"line\",\n      borderWidth: 0,\n    })),\n    ...sellIndices.map((index: number) => ({\n      label: \"Sell\",\n      data: prices.map((_, i) => (i === index ? prices[i] : null)),\n      backgroundColor: \"red\",\n      pointRadius: 6,\n      type: \"line\",\n      borderWidth: 0,\n    }))\n  ];\n\n  const chartData = { labels, datasets };\n\n  return (\n    <main className=\"p-6 space-y-6 max-w-3xl mx-auto\">\n      <h1 className=\"text-3xl font-bold\">Backtest Anything</h1>\n\n      <div className=\"space-y-4\">\n        <textarea\n          className=\"w-full p-2 border rounded\"\n          placeholder=\"Describe your strategy (e.g. Buy if BTC drops 5%)\"\n          value={strategy}\n          onChange={(e) => setStrategy(e.target.value)}\n        />\n        <button\n          onClick={generateCode}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n        >\n          Generate Strategy Code\n        </button>\n        {code && (\n          <div className=\"pt-4\">\n            <h2 className=\"text-lg font-semibold mb-2\">Generated Code:</h2>\n            <pre className=\"bg-black text-green-300 p-4 rounded overflow-x-auto text-sm whitespace-pre-wrap\">\n              {code}\n            </pre>\n          </div>\n        )}\n      </div>\n\n      <button\n        onClick={runBacktest}\n        className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\n      >\n        {loading ? \"Running Backtest...\" : \"Run Backtest\"}\n      </button>\n\n      {response && (\n        <div className=\"text-sm bg-gray-100 p-4 rounded space-y-2 mt-4\">\n          <h2 className=\"text-lg font-semibold text-green-800\">\n            Total Profit: ${Number(response.profit).toFixed(2)}\n          </h2>\n\n            {typeof response.percent_return === \"number\" && (\n              <p className=\"text-green-700\">\n                Return: {response.percent_return.toFixed(2)}%\n              </p>\n            )}          \n\n          {Array.isArray(response.buy_date) &&\n            response.buy_date.map((date: string, i: number) => (\n              <p key={`buy-${i}`}>\n                <strong>Buy:</strong> {date} @ ${response.buy_price?.[i]}\n              </p>\n            ))}\n\n          {Array.isArray(response.sell_date) &&\n            response.sell_date.map((date: string, i: number) => (\n              <p key={`sell-${i}`}>\n                <strong>Sell:</strong> {date} @ ${response.sell_price?.[i]}\n              </p>\n            ))}\n        </div>\n      )}\n\n\n      <div className=\"bg-white p-4 rounded shadow mt-4\">\n        <Line data={chartData} />\n      </div>\n    </main>\n  );\n}\n\n\n\n\n\n\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}